version: '3.8'

services:
  # Redis服务
  redis:
    image: redis:7-alpine
    container_name: douyin-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes
    networks:
      - douyin-network

  # 后端服务 (开发模式)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: douyin-backend-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=dev-secret-key
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DATABASE_URL=sqlite:///./data/douyin_manager.db
      - REDIS_URL=redis://redis:6379
      - DOUYIN_CLIENT_ID=dev-client-id
      - DOUYIN_CLIENT_SECRET=dev-client-secret
      - DOUYIN_REDIRECT_URI=http://localhost:5173/auth/callback
      - DOUYIN_API_BASE_URL=https://open.douyin.com
      - OPENAI_API_KEY=
      - STABILITY_API_KEY=
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=104857600
      - BACKEND_CORS_ORIGINS=["http://localhost:5173","http://localhost:5174","http://localhost:8080","http://127.0.0.1:5173","http://127.0.0.1:5174","http://127.0.0.1:8080"]
    volumes:
      - backend_uploads_dev:/app/uploads
      - backend_db_dev:/app/data
      - ./backend:/app  # 开发模式：挂载源代码目录
    depends_on:
      - redis
    networks:
      - douyin-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # 前端服务 (开发模式)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: douyin-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app  # 开发模式：挂载源代码目录
      - /app/node_modules  # 排除node_modules
    depends_on:
      - backend
    networks:
      - douyin-network

volumes:
  redis_data_dev:
    driver: local
  backend_uploads_dev:
    driver: local
  backend_db_dev:
    driver: local

networks:
  douyin-network:
    driver: bridge

